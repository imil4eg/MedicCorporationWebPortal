@model MedicalCorporateWebPortal.Models.RegisterViewModel

@{
    ViewBag.Title = "Регистрация";
}

<h2>Регистрация</h2>

@if(ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if(ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Успешно!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using(Html.BeginForm("Register", "Security", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Login, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Login, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("LoginExist", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PasswordConfirm, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.PasswordConfirm, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, new { @class = "col-md-2" })
                <div class="col-md-10">
                    <div class="input-group date datepicker-inline">
                        @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control" })
                        <div class="input-group-addon glyphicon glyphicon-th"></div>
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(Gender))), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Создать" class="btn btn-default" />
                </div>
            </div>
        </div>
        if(ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Ошибка!</strong>@ViewBag.Message
            </div>

        }
    }
}

