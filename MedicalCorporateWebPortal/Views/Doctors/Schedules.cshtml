@using MedicalCorporateWebPortal.AppData;
@using System.Globalization;
@model Tuple<Doctor, IEnumerable<DateOfAppointment>, IEnumerable<AppointmentTime>, IEnumerable<Service>, User>

<div>
    <div>
        <div class="inline">
            <img src="~/images/default-user-image.png" alt="avatar" width="100" height="75" />
        </div>
        <div class="inline">
            <h1>@string.Format("{0} {1}", Model.Item5.LastName, Model.Item5.FirstName)</h1>
            <b>@Model.Item1.Speciality</b>
        </div>
    </div>
</div>
<div>
    <h2>Расписание</h2>
    <div class="schedule-header">
        @string.Format("{0} {1} - {2} {3} {4}", DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Monday).Day, DateTime.Today.ToString("MMMM"), DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Friday).Day, DateTime.Today.ToString("MMMM"), DateTime.Today.Year)
    </div>
    @{
        int startOfWeekDate = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Monday).Date.Day;
        string[] shortDates = DateTimeFormatInfo.CurrentInfo.ShortestDayNames;
        for(int i = 1;i < 5 + 1;i++)
        {
            <div class="schedule-day-header">
                @string.Format("{0}, {1}", shortDates[i], startOfWeekDate++)
            </div>

        }
    }
    <div class="change-service">
        <span class="steps-breadcrumb-name col-md-2">Услуга</span>
        <div class="service-select">
            @Html.DropDownListFor(model => model.Item4, Model.Item4.Select(x => new SelectListItem { Text = x.Name, Value = x.ServiceID.ToString() }),new { @class = "form-control"})
        </div>
    </div>
    <div class="schedule-week">
        @{
            int currentDay = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Monday).Day;
            int endOfDay = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Friday).Day;
            foreach (var date in Model.Item2)
            {
                for(;currentDay < endOfDay && currentDay != date.Date.Day;currentDay++)
                {
                    <div class="schedule-day">
                        В этот день приема нет.
                    </div>
                }

                int[] r = Array.ConvertAll(date.PeriodOfWorking.Split('-'), int.Parse);
                DateTime currentTime = DateTime.Today;
                currentTime = currentTime.AddHours(r[0]);
                    <div class="schedule-day">
                        @{
                            for (; currentTime.Hour < r[1]; currentTime = currentTime.AddMinutes(30))
                            {
                                bool reserved = false;
                                foreach (var reservedTime in Model.Item3.Where(t => t.DateOfAppointmentID == date.DateOfAppointmentID))
                                {
                                    if (reservedTime.Time.Hour == currentTime.Hour)
                                    {
                                        <input type="button" class="btn btn-group-vertical btn-primary btn-lg" value="@currentTime.ToString("HH:mm")" onclick="" />
                                        reserved = true;
                                        break;
                                    }
                                }
                            
                                if (reserved)
                                {
                                    continue;
                                }
                            
                                <input type="button" class="btn btn-group-vertical btn-primary btn-lg" value="@currentTime.ToString("HH:mm")" disabled="disabled" onclick="" />
                            }
                            currentDay++;
                        }
                    </div>
            }
        }
    </div>
</div>


