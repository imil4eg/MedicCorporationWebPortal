@model MedicalCorporateWebPortal.Models.ProfileViewModel

@{
    ViewData["Title"] = "EditProfile";
}

<h2>Изменение информации</h2>

@using (Html.BeginForm("EditProfile", "Profile", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "col-md-10" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class =  "col-md-10"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "col-md-10" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-10" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-md-10" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "col-md-10" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Gender, new SelectList(Enum.GetValues(typeof(Gender))), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, new { @class = "col-md-10" })
            <div class="col-md-10">
                <div class="input-group date datepicker-inline">
                    @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control" })
                    <div class="input-group-addon glyphicon glyphicon-th"></div>
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @if (User.IsInRole(UserRole.Пациент.ToString()))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PassportSeries, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.PassportSeries, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PassportSeries, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PassportNumber, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.PassportNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PassportNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InsuranceNumber, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.InsuranceNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InsuranceNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InsuranceCompany, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.InsuranceCompany, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InsuranceCompany, "", new { @class = "text-danger" })
                </div>
            </div>
                        <div class="form-group">
                @Html.LabelFor(model => model.SNILS, new { @class = "col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.SNILS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SNILS, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">  
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
            <div class="col-md-offset-2 col-md-2">
                @Html.ActionLink("Назад", "Profile", "Profile", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

